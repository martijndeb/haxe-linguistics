class Type{
	static public getClass<T : getClass.T>(method) : o : getClass.T -> Class<getClass.T>

	 = function(o:getClass.T) = {
		if ((__dollar__typeof(o) != __dollar__tobject))return null);
		var p = __dollar__objgetproto(o);
		if ((p == null))return null);
		return p.__class__;
	};

	static public getClassName(method) : c : Class<Dynamic> -> String

	 = function(c:Class<Dynamic>) = {
		if ((c == null))return null);
		var a = c.__name__;
		return a.join(".");
	};

	static public createInstance<T : createInstance.T>(method) : cl : Class<createInstance.T> -> args : Array<Dynamic> -> createInstance.T

	 = function(cl:Class<createInstance.T>,args:Array<Dynamic>) = {
		var fnew = $objget(cl,$hash("new".__s));
		var a = args.__neko();
		var n = $nargs(fnew);
		if ((n > $asize(a))){
			var a2 = $amake(n);
			$ablit(a2,0,a,0,$asize(a));
			a = a2;
		});
		return $call(fnew,cl,a);
	};

	static public getInstanceFields(method) : c : Class<Dynamic> -> Array<String>

	 = function(c:Class<Dynamic>) = {
		var a = Reflect.fields(c.prototype);
		c = c.__super__;
		while ((c != null)) {
			{
				var _g = 0;
				var _g1 = Reflect.fields(c.prototype);
				while ((_g < _g1.length)) {
					var f = _g1[_g];
					++ _g;
					a.remove(f);
					a.push(f);
				};
			};
			c = c.__super__;
		};
		a.remove("__class__");
		a.remove("__serialize");
		a.remove("__string");
		a.remove("__properties__");
		return a;
	};

}