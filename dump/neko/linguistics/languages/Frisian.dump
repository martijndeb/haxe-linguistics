class linguistics.languages.Frisian implements linguistics.languages.ILanguage{
	public new(method) : Void -> Void

	 = function() = {
		this.basicStemmer = null;
		this.token = cast linguistics.tokenizers.tokens.Token;
		this.lengthBasedTokenizer = cast linguistics.languages.fry.LengthBasedTokenizerFRY;
		this.basicTokenizer = cast linguistics.languages.fry.BasicTokenizerFRY;
		this.name = "Frisian";
	};

	public name(var) : String;

	public basicTokenizer(var) : Class<Dynamic>;

	public lengthBasedTokenizer(var) : Class<Dynamic>;

	public token(var) : Class<Dynamic>;

	public basicStemmer(var) : Class<Dynamic>;

	public stopwords(var) : Array<linguistics.tokenizers.tokens.IToken>;

	public createTokens(method) : Void -> Void

	 = function() = {
		var tokenizer = Type.createInstance(this.basicTokenizer,[]);
		this.stopwords = tokenizer.tokenize("'e 'k 't al as bij by dan dat de den der dij do doe doe't dwaen dy dêr dêr't ek " + "en er fan foar folle gau gean gjin goed guod ha har hat haw het hie hiene him hinne " + "hja hjir hoe hoe't hy ik in is it jild jimme jit jo jou kaam ken kenne kin kinne " + "koe komme komt lang man mar mat mear mei moast moat my myn mynhear neat nei net no " + "oan oare oars oer of oft om op ris sa se sei sels sil sjen soe syn ta te toe troch " + "tsjin waard want wat weard wer wier wirde woe wol wy wêr wêr't yn âlde ôf út ût");
	};

	static public basicTokenExpression(var) : EReg

	 = new EReg("[^a-zA-Z0-9_\\-âêîôûáéíóúÂÊÎÔÛÁÉÍÓÚ]+","g");

}