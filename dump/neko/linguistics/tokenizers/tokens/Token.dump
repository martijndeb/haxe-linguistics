class linguistics.tokenizers.tokens.Token implements linguistics.tokenizers.tokens.IToken{
	public new(method) : myTokenString : String -> ?myDocumentIndex : Int -> ?myRelativeIndex : Int -> Void

	 = function(myTokenString:String,myDocumentIndex:Int = null,myRelativeIndex:Int = null) = {
		this.token = myTokenString;
		this.documentIndex = myDocumentIndex;
		this.relativeIndex = myRelativeIndex;
	};

	public documentIndex(var) : Int;

	public relativeIndex(var) : Int;

	public token(var) : String;

	public normalizedToken(var) : String;

	public isValidFor(method) : myTokenString : String -> Bool

	 = function(myTokenString:String) = {
		return true;
	};

	public normalize(method) : Void -> String

	 = function() = {
		this.normalizedToken = this.token;
		return this.normalizedToken;
	};

	public toString(method) : Void -> String

	 = function() = {
		return this.token;
	};

	public isEqualToToken(method) : myToken : linguistics.tokenizers.tokens.IToken -> ?doNormalize : Bool -> Bool

	 = function(myToken:linguistics.tokenizers.tokens.IToken,doNormalize:Bool = null) = {
		var compareTo;
		if ((doNormalize == true))compareTo = myToken.normalize().toLowerCase() else compareTo = myToken.token.toLowerCase());
		var compareFrom;
		if ((doNormalize == true))compareFrom = this.normalize().toLowerCase() else compareFrom = this.token.toLowerCase());
		return compareFrom == compareTo;
	};

}