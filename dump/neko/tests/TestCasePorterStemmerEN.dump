class tests.TestCasePorterStemmerEN extends haxe.unit.TestCase{
	public new(method) : Void -> Void

	 = function() = {
		super();
	};

	public testPorterStemmerEN(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.English);
		var stemmer = linguistics.Linguistics.getInstance().getBasicStemmer();
		this.assertEquals("consign",stemmer.stem("consign"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 16,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consign",stemmer.stem("consigned"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 17,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consign",stemmer.stem("consigning"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 18,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consign",stemmer.stem("consignment"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 19,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consist"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 20,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consisted"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 21,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consistency"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 22,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consistent"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 23,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consistently"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 24,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consisting"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 25,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consist",stemmer.stem("consists"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 26,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consol",stemmer.stem("consolation"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 27,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consol",stemmer.stem("consolations"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 28,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consolatori",stemmer.stem("consolatory"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 29,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("console",stemmer.stem("console"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 30,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consol",stemmer.stem("consoled"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 31,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consoles",stemmer.stem("consoles"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 32,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consolid",stemmer.stem("consolidate"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 33,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consolid",stemmer.stem("consolidated"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 34,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consolid",stemmer.stem("consolidating"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 35,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consol",stemmer.stem("consoling"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 36,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consol",stemmer.stem("consolingly"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 37,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consol",stemmer.stem("consols"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 38,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conson",stemmer.stem("consonant"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 39,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consort",stemmer.stem("consort"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 40,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consort",stemmer.stem("consorted"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 41,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("consort",stemmer.stem("consorting"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 42,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspicu",stemmer.stem("conspicuous"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 43,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspicu",stemmer.stem("conspicuously"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 44,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspiraci",stemmer.stem("conspiracy"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 45,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspir",stemmer.stem("conspirator"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 46,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspir",stemmer.stem("conspirators"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 47,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspire",stemmer.stem("conspire"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 48,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspir",stemmer.stem("conspired"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 49,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("conspir",stemmer.stem("conspiring"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 50,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("constabl",stemmer.stem("constable"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 51,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("constanc",stemmer.stem("constance"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 52,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("constanc",stemmer.stem("constancy"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 53,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("constant",stemmer.stem("constant"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 54,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knack",stemmer.stem("knack"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 55,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knackeri",stemmer.stem("knackeries"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 56,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knack",stemmer.stem("knacks"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 57,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knag",stemmer.stem("knag"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 58,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knave",stemmer.stem("knave"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 59,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knave",stemmer.stem("knaves"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 60,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knavish",stemmer.stem("knavish"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 61,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knead",stemmer.stem("kneaded"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 62,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knead",stemmer.stem("kneading"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 63,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knee",stemmer.stem("knee"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 64,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("kneel",stemmer.stem("kneel"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 65,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("kneel",stemmer.stem("kneeled"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 66,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("kneel",stemmer.stem("kneeling"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 67,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("kneel",stemmer.stem("kneels"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 68,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knee",stemmer.stem("knees"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 69,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knell",stemmer.stem("knell"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 70,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knelt",stemmer.stem("knelt"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 71,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knew",stemmer.stem("knew"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 72,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knick",stemmer.stem("knick"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 73,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knif",stemmer.stem("knif"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 74,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knife",stemmer.stem("knife"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 75,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knight",stemmer.stem("knight"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 76,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knight",stemmer.stem("knightly"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 77,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knight",stemmer.stem("knights"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 78,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knit",stemmer.stem("knit"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 79,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knit",stemmer.stem("knits"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 80,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knit",stemmer.stem("knitted"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 81,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knit",stemmer.stem("knitting"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 82,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knive",stemmer.stem("knives"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 83,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knob",stemmer.stem("knob"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 84,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knob",stemmer.stem("knobs"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 85,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knock",stemmer.stem("knock"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 86,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knock",stemmer.stem("knocked"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 87,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knocker",stemmer.stem("knocker"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 88,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knocker",stemmer.stem("knockers"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 89,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knock",stemmer.stem("knocking"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 90,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knock",stemmer.stem("knocks"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 91,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knopp",stemmer.stem("knopp"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 92,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knot",stemmer.stem("knot"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 93,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
		this.assertEquals("knot",stemmer.stem("knots"),{fileName : "TestCasePorterStemmerEN.hx",lineNumber : 94,className : "tests.TestCasePorterStemmerEN",methodName : "testPorterStemmerEN"});
	};

}