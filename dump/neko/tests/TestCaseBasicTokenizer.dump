class tests.TestCaseBasicTokenizer extends haxe.unit.TestCase{
	public new(method) : Void -> Void

	 = function() = {
		super();
	};

	public testTokenizeEnglish(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.English);
		var tokenizer = linguistics.Linguistics.getInstance().getBasicTokenizer();
		this.assertEquals("A fool thinks himself to be wise but a wise man knows himself to be a fool",tokenizer.tokenize("A fool thinks himself to be wise, but a wise man knows himself to be a fool.").map(function(v:linguistics.tokenizers.tokens.IToken) = {
			return v.toString();
		}).join(" "),{fileName : "TestCaseBasicTokenizer.hx",lineNumber : 19,className : "tests.TestCaseBasicTokenizer",methodName : "testTokenizeEnglish"});
	};

	public testTokenizeDutch(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.Dutch);
		var tokenizer = linguistics.Linguistics.getInstance().getBasicTokenizer();
		this.assertEquals("Nederlanders drinken 's morgens gemiddeld 2 koppen koffie",tokenizer.tokenize("Nederlanders drinken 's morgens gemiddeld 2 koppen koffie.").map(function(v:linguistics.tokenizers.tokens.IToken) = {
			return v.toString();
		}).join(" "),{fileName : "TestCaseBasicTokenizer.hx",lineNumber : 34,className : "tests.TestCaseBasicTokenizer",methodName : "testTokenizeDutch"});
	};

	public testTokenizeGerman(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.German);
		var tokenizer = linguistics.Linguistics.getInstance().getBasicTokenizer();
		this.assertEquals("Das Eisen schmieden solange es heiß ist",tokenizer.tokenize("Das Eisen schmieden, solange es heiß ist").map(function(v:linguistics.tokenizers.tokens.IToken) = {
			return v.toString();
		}).join(" "),{fileName : "TestCaseBasicTokenizer.hx",lineNumber : 48,className : "tests.TestCaseBasicTokenizer",methodName : "testTokenizeGerman"});
	};

	public testTokenizeFilteredEnglish(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.English);
		var tokenizer = linguistics.Linguistics.getInstance().getBasicTokenizer();
		var tokenSet = tokenizer.tokenize("A fool thinks himself to be wise, but a wise man knows himself to be a fool.");
		tokenSet = tokenizer.applyFilter(tokenSet,linguistics.tokenizers.filters.StopwordTokenFilter);
		this.assertEquals("fool thinks be wise wise man knows be fool",tokenSet.map(function(v:linguistics.tokenizers.tokens.IToken) = {
			return v.toString();
		}).join(" "),{fileName : "TestCaseBasicTokenizer.hx",lineNumber : 64,className : "tests.TestCaseBasicTokenizer",methodName : "testTokenizeFilteredEnglish"});
	};

	public testTokenizeFilteredDutch(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.Dutch);
		var tokenizer = linguistics.Linguistics.getInstance().getBasicTokenizer();
		var tokenSet = tokenizer.tokenize("Ik wil 's morgens gemiddeld 2 koppen koffie drinken.");
		tokenSet = tokenizer.applyFilter(tokenSet,linguistics.tokenizers.filters.StopwordTokenFilter);
		this.assertEquals("'s morgens gemiddeld 2 koppen koffie drinken",tokenSet.map(function(v:linguistics.tokenizers.tokens.IToken) = {
			return v.toString();
		}).join(" "),{fileName : "TestCaseBasicTokenizer.hx",lineNumber : 81,className : "tests.TestCaseBasicTokenizer",methodName : "testTokenizeFilteredDutch"});
	};

	public testTokenizeFilteredGerman(method) : Void -> Void

	 = function() = {
		linguistics.Linguistics.getInstance().setLanguage(linguistics.languages.German);
		var tokenizer = linguistics.Linguistics.getInstance().getBasicTokenizer();
		var tokenSet = tokenizer.tokenize("Das Eisen schmieden, solange es heiß ist");
		tokenSet = tokenizer.applyFilter(tokenSet,linguistics.tokenizers.filters.StopwordTokenFilter);
		this.assertEquals("Eisen schmieden solange heiß",tokenSet.map(function(v:linguistics.tokenizers.tokens.IToken) = {
			return v.toString();
		}).join(" "),{fileName : "TestCaseBasicTokenizer.hx",lineNumber : 98,className : "tests.TestCaseBasicTokenizer",methodName : "testTokenizeFilteredGerman"});
	};

}